apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: goapp
  template: go
message: |-
  The following service(s) have been created in your project: ${NAME}

  For more information about using this template, including OpenShift considerations, see https://github.com/theplant/openshift-go/blob/master/README.md.
metadata:
  annotations:
    description: An example Go application. For more
      information about using this template, including OpenShift considerations, see
      https://github.com/theplant/openshift-go/blob/master/README.md.
    iconClass: icon-go-gopher
    openshift.io/display-name: Go
    openshift.io/documentation-url: https://github.com/theplant/openshift-go
    openshift.io/long-description: This template defines resources needed to develop
      a Go application, including a build configuration, application deployment
      configuration.
    openshift.io/provider-display-name: The Plant Co., Ltd.
    openshift.io/support-url: https://theplant.jp
    tags: quickstart,go
    template.openshift.io/bindable: "false"
  name: go
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: ${NAME}
  spec:
    ports:
    - name: app
      port: 4000
      targetPort: 4000
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}-compile
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}-compile
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-compile:latest
    source:
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      sourceSecret:
        name: ${SOURCE_CLONE_SECRET}
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: ${BUILD_DOCKERFILE_PATH}
        pullSecret:
          name: ${REGISTRY_PULL_SECRET}
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${WEBHOOK_SECRET}
      type: Generic
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application to a docker image
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    source:
      images:
      - from:
          kind: ImageStreamTag
          name: ${NAME}-compile:latest
        paths:
        - sourcePath: /app
          destinationDir: "./app"
        - sourcePath: ./${RUN_DOCKERFILE_PATH}
          destinationDir: "./Dockerfile"
      dockerfile: |-
        FROM alpine
        ADD ./app /
        CMD ["/app/entry"]
    strategy:
      dockerStrategy:
        dockerfilePath: "./Dockerfile"
        pullSecret:
          name: ${REGISTRY_PULL_SECRET}
    triggers:
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: ${NAME}-compile:latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - image: ' '
          envFrom:
            - configMapRef:
                name: ${APP_ENV_CONFIG_MAP_NAME}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 4000
          livenessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: 10m
              memory: 10Mi
          name: ${NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: goapp
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: git@github.com:theplant/openshift-go.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this secret to clone your source code, Read Create Source Clone Secret section in doc.
  displayName: Source Clone Secret Name
  name: SOURCE_CLONE_SECRET
  value: my-github-clone-secret
- description: The Dockerfile path relative to your repository root to the compile image.
  displayName: Build Dockerfile Path in repository
  name: BUILD_DOCKERFILE_PATH
  required: true
  value: app1/Build.Dockerfile
- description: The Dockerfile path relative to your repository root to the run the image.
  displayName: Run Dockerfile Path in repository
  name: RUN_DOCKERFILE_PATH
  required: true
  value: app1/Dockerfile
- description: The Docker Registry Pull Secret. Read Create Docker Registry Secret section in doc.
  displayName: Docker Registry Pull Secret
  name: REGISTRY_PULL_SECRET
  required: true
  value: my-docker-registry
- description: App env config map name. Read Create Config Map section in doc.
  displayName: App Env Config Map Name
  name: APP_ENV_CONFIG_MAP_NAME
  required: true
  value: cm-goapp
- description: The exposed hostname that will route to the Rails service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Maximum amount of memory the Rails container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Github and Generic trigger secret.  A difficult to guess string encoded as part of the webhook URL. Not encrypted.
  displayName: Webhook Secret
  from: '[a-zA-Z0-9]{20}'
  generate: expression
  name: WEBHOOK_SECRET
